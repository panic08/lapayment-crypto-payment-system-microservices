/*
 * This file is generated by jOOQ.
 */
package ru.panic.companyservice.generatedClasses.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import ru.panic.companyservice.generatedClasses.tables.ClientsTable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientsTableRecord extends UpdatableRecordImpl<ClientsTableRecord> implements Record13<Long, String, String, String, Double, Double, Double, Double, Double, Double, Double, Double, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.clients_table.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.clients_table.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.clients_table.username</code>.
     */
    public void setUsername(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.clients_table.username</code>.
     */
    public String getUsername() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.clients_table.password</code>.
     */
    public void setPassword(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.clients_table.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.clients_table.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.clients_table.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.clients_table.btc_balance</code>.
     */
    public void setBtcBalance(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.clients_table.btc_balance</code>.
     */
    public Double getBtcBalance() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.clients_table.eth_balance</code>.
     */
    public void setEthBalance(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.clients_table.eth_balance</code>.
     */
    public Double getEthBalance() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>public.clients_table.ltc_balance</code>.
     */
    public void setLtcBalance(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.clients_table.ltc_balance</code>.
     */
    public Double getLtcBalance() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>public.clients_table.trx_balance</code>.
     */
    public void setTrxBalance(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.clients_table.trx_balance</code>.
     */
    public Double getTrxBalance() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>public.clients_table.ton_balance</code>.
     */
    public void setTonBalance(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.clients_table.ton_balance</code>.
     */
    public Double getTonBalance() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>public.clients_table.matic_balance</code>.
     */
    public void setMaticBalance(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.clients_table.matic_balance</code>.
     */
    public Double getMaticBalance() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>public.clients_table.xrp_balance</code>.
     */
    public void setXrpBalance(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.clients_table.xrp_balance</code>.
     */
    public Double getXrpBalance() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>public.clients_table.tethererc20_balance</code>.
     */
    public void setTethererc20Balance(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.clients_table.tethererc20_balance</code>.
     */
    public Double getTethererc20Balance() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>public.clients_table.registeredat</code>.
     */
    public void setRegisteredat(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.clients_table.registeredat</code>.
     */
    public Long getRegisteredat() {
        return (Long) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, String, String, String, Double, Double, Double, Double, Double, Double, Double, Double, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, String, String, String, Double, Double, Double, Double, Double, Double, Double, Double, Long> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ClientsTable.CLIENTS_TABLE.ID;
    }

    @Override
    public Field<String> field2() {
        return ClientsTable.CLIENTS_TABLE.USERNAME;
    }

    @Override
    public Field<String> field3() {
        return ClientsTable.CLIENTS_TABLE.PASSWORD;
    }

    @Override
    public Field<String> field4() {
        return ClientsTable.CLIENTS_TABLE.EMAIL;
    }

    @Override
    public Field<Double> field5() {
        return ClientsTable.CLIENTS_TABLE.BTC_BALANCE;
    }

    @Override
    public Field<Double> field6() {
        return ClientsTable.CLIENTS_TABLE.ETH_BALANCE;
    }

    @Override
    public Field<Double> field7() {
        return ClientsTable.CLIENTS_TABLE.LTC_BALANCE;
    }

    @Override
    public Field<Double> field8() {
        return ClientsTable.CLIENTS_TABLE.TRX_BALANCE;
    }

    @Override
    public Field<Double> field9() {
        return ClientsTable.CLIENTS_TABLE.TON_BALANCE;
    }

    @Override
    public Field<Double> field10() {
        return ClientsTable.CLIENTS_TABLE.MATIC_BALANCE;
    }

    @Override
    public Field<Double> field11() {
        return ClientsTable.CLIENTS_TABLE.XRP_BALANCE;
    }

    @Override
    public Field<Double> field12() {
        return ClientsTable.CLIENTS_TABLE.TETHERERC20_BALANCE;
    }

    @Override
    public Field<Long> field13() {
        return ClientsTable.CLIENTS_TABLE.REGISTEREDAT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUsername();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public Double component5() {
        return getBtcBalance();
    }

    @Override
    public Double component6() {
        return getEthBalance();
    }

    @Override
    public Double component7() {
        return getLtcBalance();
    }

    @Override
    public Double component8() {
        return getTrxBalance();
    }

    @Override
    public Double component9() {
        return getTonBalance();
    }

    @Override
    public Double component10() {
        return getMaticBalance();
    }

    @Override
    public Double component11() {
        return getXrpBalance();
    }

    @Override
    public Double component12() {
        return getTethererc20Balance();
    }

    @Override
    public Long component13() {
        return getRegisteredat();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUsername();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public Double value5() {
        return getBtcBalance();
    }

    @Override
    public Double value6() {
        return getEthBalance();
    }

    @Override
    public Double value7() {
        return getLtcBalance();
    }

    @Override
    public Double value8() {
        return getTrxBalance();
    }

    @Override
    public Double value9() {
        return getTonBalance();
    }

    @Override
    public Double value10() {
        return getMaticBalance();
    }

    @Override
    public Double value11() {
        return getXrpBalance();
    }

    @Override
    public Double value12() {
        return getTethererc20Balance();
    }

    @Override
    public Long value13() {
        return getRegisteredat();
    }

    @Override
    public ClientsTableRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ClientsTableRecord value2(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public ClientsTableRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public ClientsTableRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public ClientsTableRecord value5(Double value) {
        setBtcBalance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value6(Double value) {
        setEthBalance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value7(Double value) {
        setLtcBalance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value8(Double value) {
        setTrxBalance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value9(Double value) {
        setTonBalance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value10(Double value) {
        setMaticBalance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value11(Double value) {
        setXrpBalance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value12(Double value) {
        setTethererc20Balance(value);
        return this;
    }

    @Override
    public ClientsTableRecord value13(Long value) {
        setRegisteredat(value);
        return this;
    }

    @Override
    public ClientsTableRecord values(Long value1, String value2, String value3, String value4, Double value5, Double value6, Double value7, Double value8, Double value9, Double value10, Double value11, Double value12, Long value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientsTableRecord
     */
    public ClientsTableRecord() {
        super(ClientsTable.CLIENTS_TABLE);
    }

    /**
     * Create a detached, initialised ClientsTableRecord
     */
    public ClientsTableRecord(Long id, String username, String password, String email, Double btcBalance, Double ethBalance, Double ltcBalance, Double trxBalance, Double tonBalance, Double maticBalance, Double xrpBalance, Double tethererc20Balance, Long registeredat) {
        super(ClientsTable.CLIENTS_TABLE);

        setId(id);
        setUsername(username);
        setPassword(password);
        setEmail(email);
        setBtcBalance(btcBalance);
        setEthBalance(ethBalance);
        setLtcBalance(ltcBalance);
        setTrxBalance(trxBalance);
        setTonBalance(tonBalance);
        setMaticBalance(maticBalance);
        setXrpBalance(xrpBalance);
        setTethererc20Balance(tethererc20Balance);
        setRegisteredat(registeredat);
        resetChangedOnNotNull();
    }
}
